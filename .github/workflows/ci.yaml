name: CI
on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: "0 13 * * 1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.python-version }} | ${{ matrix.os }})
    if: github.repository == 'xgcm/xgcm'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Create conda environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          cache-downloads: true
          micromamba-version: 'latest'
          environment-file: ci/environment.yml
          extra-specs: |
            python=${{ matrix.python-version }}
      - name: Install XGCM
        run: |
          python -m pip install -e . --no-deps
          conda list
      - name: Run Tests
        run: |
          pytest -n auto --cov=./ --cov-report=xml
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  core-deps-dev:
    name: Build (core-dependencies)
    if: github.repository == 'xgcm/xgcm'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v3
    - name: Create conda environment
      uses: mamba-org/provision-with-micromamba@main
      with:
        cache-downloads: true
        micromamba-version: 'latest'
        environment-file: ci/environment-core-deps.yml
        extra-specs: |
          python=${{ matrix.python-version }}
    - name: Install XGCM
      run: |
        python -m pip install -e . --no-deps
        conda list
    - name: Run Tests
      run: |
        pytest -n auto

  upstream-dev:
    name: Build (upstream-dev)
    if: github.repository == 'xgcm/xgcm'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v3
    - name: Create conda environment
      uses: mamba-org/provision-with-micromamba@main
      with:
        cache-downloads: true
        micromamba-version: 'latest'
        environment-file: ci/environment-upstream-dev.yml
        extra-specs: |
          python=<3.11
    - name: Install XGCM
      run: |
        python -m pip install -e . --no-deps
        conda list
    - name: Run Tests
      run: |
        pytest -n auto
